name: UgandaEMR CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - run: yarn install --immutable
      - run: yarn verify
      - run: yarn turbo run build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: |
            packages/**/dist

  pre_release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
          scope: "@ugandaemr"
      - run: yarn install --immutable

      - name: Version
        run: yarn lerna version "$(node -e "console.log(require('semver').inc(require('./lerna.json').version, 'patch'))")-pre.${{ github.run_number }}" --no-git-tag-version --no-push --yes

      - name: Build
        run: yarn turbo run build --color --concurrency=5

      - run: git config user.email "<>" && git config user.name "GitHub Actions Bot"
      - run: git add . && git commit -m "Prerelease version" --no-verify

      - name: Pre-release
        run: yarn run ci:prepublish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'release' }}

    steps:
      - uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install --immutable
      - run: yarn config set npmAuthToken "${NODE_AUTH_TOKEN}" &&  yarn npm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
